Para resolver a alocação de bancas de TCCs por meio de um algoritmo genético, 
devemos antes traduzir todo o problema de escalonamento para uma “linguagem cromossômica” que o algoritmo entenda. 
Imagine que temos N trabalhos, S salas, H blocos horários e P professores. 
Cada indivíduo da nossa população será uma lista de N genes, 
onde cada gene codifica de forma compacta a atribuição completa de um único TCC.

Em termos práticos, cada gene contém três informações principais: o bloco horário (um índice entre 1 e H), 
a sala (um índice entre 1 e S) e o conjunto de membros da banca (por exemplo, três inteiros escolhidos de 1 a P, 
onde obrigatoriamente um é o orientador e pelo menos dois são internos). 
Assim, um cromossomo pode ser visto como uma matriz N×(2+K), em que K é o número de professores por banca. 
Essa codificação garante que todo TCC esteja representado exatamente uma vez em cada solução candidata.

Para medir o “quão boa” é uma solução, definimos uma função de fitness que pune todas as violações das regras do concurso. 
Primeiro, contamos cada vez que um professor aparece em duas bancas no mesmo horário e somamos uma penalidade pesada. 
Depois, verificamos a composição de cada banca: se faltar o orientador ou não houver dois membros internos, 
incrementamos outra penalidade. Em seguida, para cada docente que ultrapasse o limite diário X de participações, 
adicionamos uma penalidade proporcional ao excesso. 
Finalmente, toda ocorrência de duas bancas alocadas à mesma sala e horário também eleva o custo. 
Quanto maior for a soma dessas penalidades, pior será a avaliação do cromossomo.

Convertendo penalidades em fitness, podemos usar por exemplo

fitness = 1 / (c1 + c2 + c3 + c4 + 1)

de modo que soluções sem conflitos (penalidade zero) atinjam o valor máximo de 1 e 
aquelas com muitos conflitos se aproximem de zero. Outra possibilidade é definir um fitness linear do tipo

fitness = M - (c1 + c2 + c3 + c4)

onde c1, c2, c3, c4 são os contadores de cada tipo de violação e M é grande o bastante para manter o fitness positivo.

Com a representação e a avaliação prontas, implementamos os operadores genéticos:

Seleção, por torneio ou roleta, para privilegiar soluções de maior fitness;

Crossover, na qual dois cromossomos trocam blocos de genes (por exemplo, um subconjunto de TCCs) 
para explorar novas combinações de horários e comissões;

Mutação, que modifica aleatoriamente o horário, a sala ou um dos membros da banca de um gene, introduzindo diversidade.

Ao iterar esse processo/seleção, recombinação e mutação/por várias gerações, 
o algoritmo genético tende a minimizar sistematicamente as penalidades, 
convergindo para uma alocação de bancas que satisfaz todas as restrições: 
cada TCC avaliado, nenhum professor duplicado no mesmo horário, composição correta das comissões, 
limite diário de participações respeitado e ausência de sobreposição de salas. 
Dessa forma, tornamos o problema de escalonamento mensurável, otimável e completamente tratável por abordagens evolutivas.
